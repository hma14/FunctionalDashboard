@model IList<FunctionalDashboard.ViewModels.PpassProgramFile>
           
@using FunctionalDashboard.Controllers;

<h5>Program - Files View (PPASS)</h5>
<div>
    <div style="float: left; width: 60%;">

        <table class="table_short">
            <caption class="caption">NCS Detail</caption>
            <tr>
                <td class="bold" style="width:50%;">Program Name</td>
                @if (Model != null)
                {
                    <td>@Model.First().Program</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Organisation Name</td>
                @if (Model != null)
                {
                    <td>@Model.First().Name</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Customer ID</td>
                @if (Model != null)
                {
                    <td>@Model.First().OrganizationId</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Customer Assigned ID</td>
                @if (Model != null)
                {
                    <td>@Model.First().ShortName</td>
                }
                else
                {
                    <td></td>
                }
            </tr>

        </table>
    </div>

    <div style="float: right; width: 40%;">

        <table class="datepickers_pdf">
            <tr>
                <td>Request Start: &nbsp;<span class="StartEndDatePDF">@Session["startDate"] </span></td>
            </tr>
            <tr>
                <td>Request  End: &nbsp;&nbsp;<span class="StartEndDatePDF">@Session["endDate"]</span></td>
            </tr>
        </table>
        @*<table class="searchs">
            <tr>
                <td>
                    Average Elapsed Time:
                </td>
                <td>
                    <span class="ElapsedTime">@ViewBag.AverageElapsedTime</span>
                </td>
            </tr>
        </table>*@
    </div>

    <div style="float: left; width: 60%;">

        <table class="table_short">
            <caption class="caption">File Summary</caption>
            <tr>
                <td class="bold" style="width:50%;">Total IUF</td>
                <td>@Model.Sum(e => e.IufRequests)</td>

            </tr>
            <tr>
                <td class="bold">Total FUF</td>
                <td>@Model.Sum(e => e.FufRequests)</td>

            </tr>
            <tr>
                <td class="bold">Total FCF</td>
                <td>@Model.Sum(e => e.FcfRequests)</td>

            </tr>
            <tr>
                <td class="bold">Total ICF</td>
                <td>@Model.Sum(e => e.IcfRequests)</td>

            </tr>
            <tr>                
                <td class="bold">Errors (Acknowledged or Cleared)</td>
                @if (@Model.First().Errors > 0)
                {
                    <td class="errors">
                        @String.Format("{0:#,###0} ({1:#,###0})", @Model.First().Errors, @Model.First().Acknowledged + @Model.First().ClearedErrors)
                    </td>
                }
                else if (@Model.First().Acknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("({0:#,###0})", @Model.First().Acknowledged + @Model.First().ClearedErrors)
                    </td>
                }
                else if (@Model.First().Errors == 0 && @Model.First().Acknowledged == 0 && @Model.First().ClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("({0:#,###0})", @Model.First().ClearedErrors)
                    </td>
                }
                else
                {
                    <td class="non-error">OK</td>
                }

            </tr>
            <tr>
        </table>
    </div>
</div>



<div class="RetrievedResult">
    <table class="table_short">
        
        <caption class="caption">
            
            @if (Session["Keyword"] != null)
            {
                @Html.Raw(String.Format("Search Results for <strong style=\"font-size: 0.8em; color: red;\">{0}<strong ></strong>:{1}</strong>", @Model.First().ShortName, @Session["Keyword"].ToString()));
                
            }
            else
            {               
                @Html.Raw("File Stream");
            }
           
        </caption>
        <tr>
            <th class="fixed_column_length_200">
                Date Time Start

            </th>
            <th class="fixed_column_length_300">
                File Name

            </th>
            <th class="fixed_column_length_100">
                Requests

            </th>
            <th>
                Errors (Acknowledged or Cleared)
            </th>
        </tr>

        @if (Model != null)
        { 
            foreach(var item in Model)
            {
            <tr>
                <td>
                    @item.DateStart
                </td>
                <td>
                    @Path.GetFileName(@item.FileName)
                    <br />
                    @{
                        foreach (var f in @item.Files)
                        {
                            if (f.LogLevel == EVENT_STATUS.ERROR || f.LogLevel == EVENT_STATUS.WARNING)
                            {
                                @Html.Raw("<span class='error_links'>" + f.LogLevel + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>") ;
                            }
                            else if (f.LogLevel == EVENT_STATUS.ACKNOWLEDGED)
                            {
                                @Html.Raw("<span class='ack_links'>" + f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>");
                            }
                            else if (f.LogLevel == EVENT_STATUS.CLEARED)
                            {
                                @Html.Raw("<span class='warning_links'>" + f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>");
                            }
                            else
                            {
                                @Html.Raw(f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID);
                            }
                            <br />
                        }
                    }

                </td>
                <td>
                    @item.Requests
                </td>
                    @if (!String.IsNullOrEmpty(@item.ErrorDescr))
                    {
                        if (@item.TotalErrors > 0)
                        {
                            <td class="errors">
                                @String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)
                                <p class="error_description">
                                    @item.ErrorDescr<br />
                                    <b>Stack Trace: </b>
                                    <br />@item.StackTrace
                                </p>
                            </td>
                        }

                        else if (@item.Acknowledged > 0)
                        {
                            <td class="acknowledged">
                                @String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)
                                <p class="error_description">
                                    @item.ErrorDescr<br />
                                    <b>Stack Trace: </b>
                                    <br />@item.StackTrace
                                </p>
                            </td>
                         }
                         else if (@item.ClearedErrors > 0 && @item.TotalErrors == 0 && @item.Acknowledged == 0)
                         {
                            <td class="warnings">
                                @String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)
                                <p class="error_description">
                                    @item.ErrorDescr<br />
                                    <b>Stack Trace: </b>
                                    <br />@item.StackTrace
                                </p>
                            </td>
                         }
                         else
                         {
                            <td class="non-error">
                                Completed
                            </td>
                         }
                    }
                    else
                    {
                        <td class="non-error">
                            Completed
                        </td>
                    }
            </tr>
            }
        }
    </table>
</div>