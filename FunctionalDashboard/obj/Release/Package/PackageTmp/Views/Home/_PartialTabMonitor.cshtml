@using PagedList.Mvc;
@using PagedList;
@using FunctionalDashboard.Models;
@using FunctionalDashboard.Controllers;

<link rel="stylesheet" href="~/Content/popBox.css" type="text/css" />
<script src="~/Scripts/popBox.js" type="text/javascript"></script>
<script src="~/Scripts/Common.js" type="text/javascript"></script>
<script src="~/Scripts/EventsTabMonitor.js" type="text/javascript"></script>
<script src="~/Scripts/KnowledgeBasePopup.js" type="text/javascript"></script>



<div>
    @using (Ajax.BeginForm("MonitorUpdatePartial", "Home", null, new AjaxOptions
    {
        HttpMethod = "GET",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "updateArea",
        OnSuccess = "$('input#StartDatepicker').UpdateDateStatus({ start: $('input#StartDatepicker').val(), end: $('input#EndDatepicker').val() })"

    }))
    {
        <table class="datepickers">

            <tr>
                <td>Request Start:
                    <input style="width:185px;margin:2px;" type="text" id="StartDatepicker" class="datefield" name="startDate" value="@Session["StartDate"]" />
                </td>
            </tr>
            <tr>
                <td>Request End: 
                    <input style="width:185px;margin:2px;" type="text" id="EndDatepicker" class="datefield" name="endDate" value="@Session["EndDate"]"  />
                </td>
            </tr>
            <tr>
                <td>
                    <input class="btn_short" id="submit" type="submit" value="Select Date Range" name="SelectDate" style="float: right; margin: 2px;" />
                </td>
            </tr>
        </table>
    }
</div>

<div id="spinner" class="spinner" style="display: none;">
    <img id="img-spinner" src="~/Images/ajax_loader.gif" alt="Loading" />
</div>



<div class="monitor_tables">

    <table class="table_short">
        <caption class="caption">Overview Errors</caption>
        <tr>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("NCS Customer ID", "UpdatePartial1", new { sortOrder1 = ViewBag.NCSCustomerIDSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_100">
                @Ajax.ActionLink("Program", "UpdatePartial1", new { sortOrder1 = ViewBag.ProgramSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("Institution", "UpdatePartial1", "Home", new { sortOrder1 = ViewBag.InstitutionSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_300">
                @Ajax.ActionLink("File Errors (Ack or Cleared)", "UpdatePartial1", "Home", new { sortOrder1 = ViewBag.FileErrorsSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_300">
                @Ajax.ActionLink("Web Service Errors (Ack or Cleared)", "UpdatePartial1", "Home", new { sortOrder1 = ViewBag.WebServiceErrorsSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th>
                @Ajax.ActionLink("Application Errors", "UpdatePartial1", "Home", new { sortOrder1 = ViewBag.ApplicationErrorsSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th>
                @Ajax.ActionLink("Active", "UpdatePartial1", "Home", new { sortOrder1 = ViewBag.ActiveSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>

        </tr>
        @{ int n = 0; }
        @foreach (var item in ViewBag.Partial1)
        {
            n += 1;
            <tr>

                <td>
                    @item.NCSCustomerID
                </td>
                <td>
                    @item.Program
                </td>
                <td>
                    @if (!String.IsNullOrEmpty(item.Institution))
                    {
                        //Files
                        if (item.Program == PROGRAM_ID.UPASS)
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                 "Files",
                                                                 "ProgramUpass",
                                                                 null,
                                                                 null,
                                                                 "tabs-1",
                                                                 new
                                                                 {
                                                                     institutionID = @item.InstitutionID,
                                                                     startDate = @ViewBag.startDate,
                                                                     endDate = @ViewBag.endDate
                                                                 },
                                                                 null)
                        }
                        else
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                 "Index",
                                                                 "ProgramPpass",
                                                                 null, null,
                                                                 "tabs-1",
                                                                 new
                                                                 {
                                                                     institutionID = @item.InstitutionID,
                                                                     startDate = @ViewBag.startDate,
                                                                     endDate = @ViewBag.endDate
                                                                 },
                                                         null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }
                </td>
                @if (@item.FileErrors > 0)
                {
                    <td class="errors">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.FileErrors, @item.FilesAcknowledged + @item.FilesClearedErrors)
                    </td>
                }
                else if (@item.FilesAcknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.FileErrors, @item.FilesAcknowledged + @item.FilesClearedErrors)
                    </td>
                }
                else if (@item.FileErrors == 0 && @item.FilesAcknowledged == 0 && @item.FilesClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.FileErrors, @item.FilesClearedErrors)
                    </td>
                }
                else
                {
                    <td class="non-error">
                        @String.Format("{0:#,###0}", @item.FileErrors)
                    </td>
                }

                @if (@item.WebServiceErrors > 0)
                {
                    <td class="errors">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.WebServiceErrors, @item.WSClearedErrors + @item.WSAcknowledged)
                    </td>
                }
                else if (@item.WSAcknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.FileErrors, @item.WSClearedErrors + @item.WSAcknowledged)
                    </td>
                }
                else if (@item.WSAcknowledged == 0 && @item.WebServiceErrors == 0 && @item.WSClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.FileErrors, @item.WSClearedErrors)
                    </td>
                }
                else
                {
                    <td class="non-error">
                        @String.Format("{0:#,###0}", @item.WebServiceErrors)
                    </td>
                }
                @if (@item.ApplicationErrors > 0)
                {
                    <td class="errors">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.ApplicationErrors, @item.AppClearedErrors)
                    </td>
                }
                else if (@item.AppClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("{0:#,###0} ({1:#,###0})", @item.ApplicationErrors, @item.AppClearedErrors)
                    </td>
                }
                else
                {
                    <td class="non-error">
                        @String.Format("{0:#,###0}", @item.ApplicationErrors)
                    </td>
                }

                <td>
                    @item.Active
                </td>
            </tr>
        }
    </table>
    <div class="pager" style="font-size: .5em; margin-top: -5px;">
        Page @(ViewBag.Partial1.PageCount < ViewBag.Partial1.PageNumber ? 0 : ViewBag.Partial1.PageNumber) of @ViewBag.Partial1.PageCount

        @Html.PagedListPager(ViewBag.Partial1 as PagedList.IPagedList<FunctionalDashboard.ViewModels.OverviewErrors>, page => Url.Action("UpdatePartial1", "Home", new { page, sortOrder1 = ViewBag.CurrentSort1 }),
                                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded }
                                      , new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "updateArea" }))

    </div>

</div>

<div id="FileErrors" style="clear: both;">
    <table class="table_short">
        <caption class="caption">File System Errors</caption>
        <tr>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("Date Time Start", "UpdatePartial2", new { sortOrder2 = ViewBag.DateTimeStartSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_100">
                @Ajax.ActionLink("Program", "UpdatePartial2", new { sortOrder2 = ViewBag.ProgramSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("Institution", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.InstitutionSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("Category", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.Category2SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
                (<span class="event_id_bold">id</span>)
            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("Event", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.Event2SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
                (<span class="event_id_bold">id</span>)
            </th>
            <th class="fixed_column_length_300">
                @Ajax.ActionLink("URI", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.URISortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_100">
                @Ajax.ActionLink("Requests", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.RequestsSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("Status", "UpdatePartial2", "Home", new { sortOrder2 = ViewBag.Status2SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>

        </tr>
        @{

            int j = 50;
        }

        @foreach (var item in ViewBag.Partial2)
        {
            j += 1;
            if (@item.CurrentClicked == 1)
            {
            <tr>
                <td class="current_selected">
                    @item.DateStart.ToString("yyyy-MM-dd HH:mm:ss.fff", System.Globalization.CultureInfo.InvariantCulture)
                </td>
                <td class="current_selected">
                    @item.Program
                </td>
                <td class="current_selected">
                    @if (!String.IsNullOrEmpty(item.Institution))
                    {
                        if (item.Program == PROGRAM_ID.UPASS)
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                "Files",
                                                "ProgramUpass",
                                                null,
                                                null,
                                                "tabs-1",
                                                new
                                                {
                                                    institutionID = @item.InstitutionID,
                                                    startDate = @ViewBag.startDate,
                                                    endDate = @ViewBag.endDate
                                                },
                                                null)
                        }
                        else
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                 "Index",
                                                 "ProgramPpass",
                                                 null,
                                                 null,
                                                 "tabs-1",
                                                 new
                                                 {
                                                     institutionID = @item.InstitutionID,
                                                     startDate = @ViewBag.startDate,
                                                     endDate = @ViewBag.endDate
                                                 },
                                                 null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }
                </td>
                <td class="current_selected">
                    @item.Category (<span class="event_id_bold">@item.CategoryID</span>)
                </td>
                <td class="current_selected">

                    <a href="#" id="@string.Format("event{0}", j)" data-id2="@item.Category" data-id3="@item.CategoryID"
                           data-id4="@item.Event" data-id5="@item.EventID"
                           data-id6="@User.Identity.Name" data-id7="@DateTime.Now">
                        @item.Event (<span class="event_id_bold">@item.EventID</span>)
                    </a>
                </td>
                <td class="current_selected">
                    @if (!String.IsNullOrEmpty(@item.URI))
                    {
                        if (item.Program == PROGRAM_ID.UPASS)
                        {
                        @Html.ActionLink(Path.GetFileName(@item.URI) as string,
                                                                  "Index",
                                                                  "DetailedFileUpass",
                                                                  new
                                                                  {
                                                                      InstitutionID = @item.InstitutionID,
                                                                      dateStartTicks = @item.DateStart.Ticks,
                                                                      URI = @item.URI
                                                                  },
                                                                  null)
                        }
                        else
                        {
                        @Html.ActionLink(Path.GetFileName(@item.URI) as string,
                                                                  "Index",
                                                                  "DetailedFilePpass",
                                                                  new
                                                                  {
                                                                      InstitutionID = @item.InstitutionID,
                                                                      dateStartTicks = @item.DateStart.Ticks,
                                                                      URI = @item.URI
                                                                  },
                                                                  null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }
                </td>
                <td class="current_selected">
                    @String.Format("{0:#,###0}", @item.Requests)
                </td>
                @if (@item.TotalErrors > 0)
                {
                    <td class="errors">
                        @String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[ACK]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[CLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged == 0 && @item.TotalErrors == 0 && @item.ClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[UNCLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else
                {
                    <td class="non-error">ERROR (@item.TotalErrors)
                    </td>
                }

            </tr>
            }
            else
            {
            <tr>
                <td>
                    @item.DateStart.ToString("yyyy-MM-dd HH:mm:ss.fff", System.Globalization.CultureInfo.InvariantCulture)
                </td>
                <td>
                    @item.Program
                </td>
                <td>
                    @if (!String.IsNullOrEmpty(item.Institution))
                    {
                        if (item.Program == PROGRAM_ID.UPASS)
                        {
                        @Html.ActionLink(@item.Institution as string,
                                            "Files",
                                            "ProgramUpass",
                                            null,
                                            null,
                                            "tabs-1",
                                            new
                                            {
                                                institutionID = @item.InstitutionID,
                                                startDate = @ViewBag.startDate,
                                                endDate = @ViewBag.endDate
                                            },
                                            null)
                        }
                        else
                        {
                        @Html.ActionLink(@item.Institution as string,
                                             "Index",
                                             "ProgramPpass",
                                             null,
                                             null,
                                             "tabs-1",
                                             new
                                             {
                                                 institutionID = @item.InstitutionID,
                                                 startDate = @ViewBag.startDate,
                                                 endDate = @ViewBag.endDate
                                             },
                                             null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }
                </td>
                <td>
                    @item.Category (<span class="event_id_bold">@item.CategoryID</span>)
                </td>
                <td>

                    <a href="#" id="@string.Format("event{0}", j)" data-id2="@item.Category" data-id3="@item.CategoryID"
                           data-id4="@item.Event" data-id5="@item.EventID"
                           data-id6="@User.Identity.Name" data-id7="@DateTime.Now">
                        @item.Event (<span class="event_id_bold">@item.EventID</span>)
                    </a>
                </td>
                <td>
                    @if (!String.IsNullOrEmpty(@item.URI))
                    {
                        if (item.Program == PROGRAM_ID.UPASS)
                        {
                        @Html.ActionLink(Path.GetFileName(@item.URI) as string,
                                                              "Index",
                                                              "DetailedFileUpass",
                                                              new
                                                              {
                                                                  InstitutionID = @item.InstitutionID,
                                                                  dateStartTicks = @item.DateStart.Ticks,
                                                                  URI = @item.URI
                                                              },
                                                              null)
                        }
                        else
                        {
                        @Html.ActionLink(Path.GetFileName(@item.URI) as string,
                                                              "Index",
                                                              "DetailedFilePpass",
                                                              new
                                                              {
                                                                  InstitutionID = @item.InstitutionID,
                                                                  dateStartTicks = @item.DateStart.Ticks,
                                                                  URI = @item.URI
                                                              },
                                                              null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }
                </td>
                <td>
                    @String.Format("{0:#,###0}", @item.Requests)
                </td>
                @if (@item.TotalErrors > 0)
                {
                    <td class="errors">
                        @String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[ACK]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[CLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged == 0 && @item.TotalErrors == 0 && @item.ClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)
                        <a href="#" id="@string.Format("clear{0}", j)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[UNCLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", j)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else
                {
                    <td class="non-error">ERROR (@item.TotalErrors)
                    </td>
                }

            </tr>
            }
        }

    </table>

</div>


<div class="pager" style="font-size: .5em; margin-top: -5px;">
    Page @(ViewBag.Partial2.PageCount < ViewBag.Partial2.PageNumber ? 0 : ViewBag.Partial2.PageNumber) of @ViewBag.Partial2.PageCount

    @Html.PagedListPager(ViewBag.Partial2 as PagedList.IPagedList<FunctionalDashboard.ViewModels.LogErrors>, page => Url.Action("UpdatePartial2", "Home", new { page, sortOrder2 = ViewBag.CurrentSort2 }),
                                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded }
                                      , new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "updateArea" }))

</div>





<div id="WebServiceErrors">

    <table class="table_short">
        <caption class="caption">Web Services Errors</caption>
        <tr>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("Date Time Start", "UpdatePartial3", new { sortOrder3 = ViewBag.DateTimeStartSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_100">
                @Ajax.ActionLink("Program", "UpdatePartial3", new { sortOrder3 = ViewBag.ProgramSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })

            </th>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("Institution", "UpdatePartial3", "Home", new { sortOrder3 = ViewBag.InstitutionSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_150">
                @Ajax.ActionLink("Category", "UpdatePartial3", "Home", new { sortOrder3 = ViewBag.Category3SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
                (<span class="event_id_bold">id</span>)
            </th>
            <th class="fixed_column_length_300">
                @Ajax.ActionLink("Event", "UpdatePartial3", "Home", new { sortOrder3 = ViewBag.Event3SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
                (<span class="event_id_bold">id</span>)
            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("GUID", "UpdatePartial3", "Home", new { sortOrder3 = ViewBag.GuidSortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>
            <th class="fixed_column_length_100">Elapsed Time
                @*@Ajax.ActionLink("Elapsed Time", "WSUpdateRetrievedResult", new { sortOrderWS = ViewBag.ElapsedTimeSortParm }, new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "updateAreaWS"
                    })*@
            </th>
            <th class="fixed_column_length_200">
                @Ajax.ActionLink("Status", "UpdatePartial3", "Home", new { sortOrder3 = ViewBag.Status3SortParm }, new AjaxOptions
           {
               HttpMethod = "GET",
               InsertionMode = InsertionMode.Replace,
               UpdateTargetId = "updateArea"
           })
            </th>

        </tr>

        @{
            int k = 0;
            int m = 0;
        }
        @foreach (var item in ViewBag.Partial3)
        {
            k += 1;
            m += 1;
            if (@item.CurrentClicked == 1)
            {
            <tr>
                <td class="current_selected">
                    @item.DateStart.ToString("yyyy-MM-dd HH:mm:ss.fff", System.Globalization.CultureInfo.InvariantCulture)
                </td>
                <td class="current_selected">
                    @item.Program
                </td>
                <td class="current_selected">

                    @if (!String.IsNullOrEmpty(item.Institution))
                    {
                        if (item.Program == PROGRAM_ID.PPASS)
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                "WebServices",
                                                                "ProgramPpass",
                                                                null, null,
                                                                "tabs-2",
                                                                new
                                                                {
                                                                    institutionID = @item.InstitutionID,
                                                                    startDate = @ViewBag.startDate,
                                                                    endDate = @ViewBag.endDate
                                                                },
                                                                null)
                        }
                        else
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                "WebServices",
                                                                "ProgramUpass",
                                                                null, null,
                                                                "tabs-2",
                                                                new
                                                                {
                                                                    institutionID = @item.InstitutionID,
                                                                    startDate = @ViewBag.startDate,
                                                                    endDate = @ViewBag.endDate
                                                                },
                                                                null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }

                </td>
                <td class="current_selected">
                    @item.Category (<span class="event_id_bold">@item.CategoryID</span>)
                </td>
                <td class="current_selected">

                    <a href="#" id="@string.Format("event{0}", k)" data-id2="@item.Category" data-id3="@item.CategoryID"
                           data-id4="@item.Event" data-id5="@item.EventID"
                           data-id6="@User.Identity.Name" data-id7="@DateTime.Now">
                        @item.Event (<span class="event_id_bold">@item.EventID</span>)
                    </a>
                    <a href="#" id="@string.Format("cate{0}", k)" data-id="@item.ID">[+]</a>
                    <div id="@string.Format("events{0}", k)"></div>
                </td>
                <td class="current_selected">
                    @if (!String.IsNullOrEmpty(@item.GUID))
                    {
                        @Html.ActionLink(String.Format("{0}", @item.GUID) as String,
                                        "Index",
                                        "UpassUserDetail",
                                        new
                                        {
                                            institutionID = @item.InstitutionID,
                                            guid = @item.GUID,
                                            csn = @item.CardSerialNumber,
                                        },
                                        null)
                    }
                    else
                    {
                        @item.GUID
                    }
                </td>
                <td class="current_selected">
                    @{
                    var ts = ((HomeController)this.ViewContext.Controller).GetElapsedTime(@item.Events);
                        @Html.Raw(ts.Duration());
                    }
                </td>
                @if (@item.TotalErrors > 0)
                {
                    <td class="errors">
                        @String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[ACK]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[CLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged == 0 && @item.TotalErrors == 0 && @item.ClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[UNCLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else
                {
                    <td class="non-error">ERROR (@item.TotalErrors)
                    </td>
                }

            </tr>
            }
            else
            {
            <tr>
                <td>
                    @item.DateStart.ToString("yyyy-MM-dd HH:mm:ss.fff", System.Globalization.CultureInfo.InvariantCulture)
                </td>
                <td>
                    @item.Program
                    @*@Html.DisplayFor(modelItem => item.Program)*@
                </td>
                <td>

                    @if (!String.IsNullOrEmpty(item.Institution))
                    {
                        if (item.Program == PROGRAM_ID.PPASS)
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                    "WebServices",
                                                                    "ProgramPpass",
                                                                    null, null,
                                                                    "tabs-2",
                                                                    new
                                                                    {
                                                                        institutionID = @item.InstitutionID,
                                                                        startDate = @ViewBag.startDate,
                                                                        endDate = @ViewBag.endDate
                                                                    },
                                                                    null)
                        }
                        else
                        {
                        @Html.ActionLink(@item.Institution as string,
                                                                    "WebServices",
                                                                    "ProgramUpass",
                                                                    null, null,
                                                                    "tabs-2",
                                                                    new
                                                                    {
                                                                        institutionID = @item.InstitutionID,
                                                                        startDate = @ViewBag.startDate,
                                                                        endDate = @ViewBag.endDate
                                                                    },
                                                            null)
                        }
                    }
                    else
                    {
                        @Html.Raw("NA")
                    }

                </td>
                <td>
                    @item.Category (<span class="event_id_bold">@item.CategoryID</span>)
                </td>
                <td>

                    <a href="#" id="@string.Format("event{0}", k)" data-id2="@item.Category" data-id3="@item.CategoryID"
                           data-id4="@item.Event" data-id5="@item.EventID"
                           data-id6="@User.Identity.Name" data-id7="@DateTime.Now">
                        @item.Event (<span class="event_id_bold">@item.EventID</span>)
                    </a>
                    <a href="#" id="@string.Format("cate{0}", k)" data-id="@item.ID">[+]</a>
                    <div id="@string.Format("events{0}", k)"></div>
                </td>
                <td>
                    @if (!String.IsNullOrEmpty(@item.GUID))
                    {
                        @Html.ActionLink(String.Format("{0}", @item.GUID) as String,
                                            "Index",
                                            "UpassUserDetail",
                                            new
                                            {
                                                institutionID = @item.InstitutionID,
                                                guid = @item.GUID,
                                                csn = @item.CardSerialNumber,
                                            },
                                            null)
                    }
                    else
                    {
                        @item.GUID
                    }
                </td>
                <td>
                    @{
                    var ts = ((HomeController)this.ViewContext.Controller).GetElapsedTime(@item.Events);
                        @Html.Raw(ts.Duration());
                    }
                </td>
                @if (@item.TotalErrors > 0)
                {
                    <td class="errors">
                        @String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[ACK]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.TotalErrors, @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged > 0)
                {
                    <td class="acknowledged">
                        @String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[CLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("ACKNOWLEDGED ({0:#,###0})", @item.ClearedErrors + @item.Acknowledged)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else if (@item.Acknowledged == 0 && @item.TotalErrors == 0 && @item.ClearedErrors > 0)
                {
                    <td class="warnings">
                        @String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)
                        <a href="#" id="@string.Format("clear{0}", m)" data-id="@item.Program" data-id2="@item.InstitutionID"
                               data-id3="@item.CategoryID" data-id4="@item.EventID" data-id5="@item.DateStart.Ticks" data-id6="@item.ID">[UNCLEAR]</a>

                        <a href="#" id="@string.Format("notes{0}", m)" data-id="@item.Program" data-id2="@item.Institution" data-id3="@item.InstitutionID"
                               data-id4="@item.Category" data-id5="@item.CategoryID" data-id6="@item.Event" data-id7="@item.EventID" data-id8="@item.ErrorID" data-id9="@item.ErrorDesc"
                               data-id10="@String.Format("CLEARED ({0:#,###0})", @item.ClearedErrors)"
                               data-id11="@item.DateStart.Ticks">[NOTES]</a>
                    </td>
                }
                else
                {
                    <td class="non-error">ERROR (@item.TotalErrors)
                    </td>
                }

            </tr>
            }
        }
    </table>

</div>

<div class="pager" style="font-size: .5em; margin-top: -5px;">
    Page @(ViewBag.Partial3.PageCount < ViewBag.Partial3.PageNumber ? 0 : ViewBag.Partial3.PageNumber) of @ViewBag.Partial3.PageCount

    @Html.PagedListPager(ViewBag.Partial3 as PagedList.IPagedList<FunctionalDashboard.ViewModels.WebServiceOperationStatus>, page => Url.Action("UpdatePartial3", "Home", new { page, sortOrder3 = ViewBag.CurrentSort3 }),
                                 PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded }
                                              , new AjaxOptions() { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "updateArea" }))

</div>




