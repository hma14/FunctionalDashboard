@model IList<FunctionalDashboard.ViewModels.UpassProgramFile>
@using FunctionalDashboard.Controllers;

<h5>Program - Files View (UPASS)</h5>
<div>
    <div style="float: left; width: 60%;">

        <table class="table_short">
            <caption class="caption">NCS Detail</caption>
            <tr>
                <td class="bold" style="width:50%;">Program Name</td>
                @if (Model != null)
                {
                    <td>@Model.First().Program</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Organisation Name</td>
                @if (Model != null)
                {
                    <td>@Model.First().Name</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Customer ID</td>
                @if (Model != null)
                {
                    <td>@Model.First().OrganizationId</td>
                }
                else
                {
                    <td></td>
                }
            </tr>
            <tr>
                <td class="bold">NCS Customer Assigned ID</td>
                @if (Model != null)
                {
                    <td>@Model.First().ShortName</td>
                }
                else
                {
                    <td></td>
                }
            </tr>

        </table>
    </div>
    <div  style="float: right; width: 40%;">

        <table class="datepickers_pdf">
            <tr>
                <td>Request Start: &nbsp;<span class="StartEndDatePDF">@Session["StartDate"]</span>

                </td>
            </tr>
            <tr>
                <td>Request  End: &nbsp;&nbsp;<span class="StartEndDatePDF">@Session["EndDate"]</span>

                </td>
            </tr>
        </table>
    </div>

    <div style="float: left; width: 60%;">

        <table class="table_short">
            <caption class="caption">File Summary</caption>
            <tr>
                <td class="bold" style="width: 50%;">Total Eligibility Requests</td>
                <td style="width: 50%;">@Model.Sum(r => r.Requests)</td>

            </tr>

            <tr>
                <td class="bold">Errors</td>
                @if (Model.Sum(e => e.Errors) > 0)
                {
                    <td class="errors">@Model.Sum(e => e.Errors) </td>
                }
                else
                {
                    <td class="non-error"></td>
                }
            </tr>
        </table>
    </div>
</div>



<div class="RetrievedResult">

    <table class="table_short">
       <caption  class="caption">
            @if (Session["Keyword"] != null)
            {
                @Html.Raw(String.Format("Search Results for <strong style=\"font-size: 0.8em; color: red;\">{0}<strong ></strong>:{1}</strong>", @Model.First().ShortName, @Session["Keyword"].ToString()));
                
            }
            else
            {               
                @Html.Raw("File Stream");
            }
        </caption>
        <tr>
            <th class="fixed_column_length_200">
                Date Time Start

            </th>
            <th class="fixed_column_length_300">
                File Name

            </th>
            <th class="fixed_column_length_100">
                Requests

            </th>
            <th>
                Status

            </th>
        </tr>

        @if (Model != null)
        { 
            foreach (var item in @Model)
            {
                <tr>
                    <td>
                        @item.DateStart
                    </td>
                    <td>
                        @item.FileName
                        <br />
                        @{
                            foreach (var f in @item.Files)
                            {
                                if (f.LogLevel == EVENT_STATUS.ERROR || f.LogLevel == EVENT_STATUS.WARNING)
                                {
                                    @Html.Raw("<span class='error_links'>" + f.LogLevel + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>") ;
                                }
                                else if (f.LogLevel == EVENT_STATUS.ACKNOWLEDGED)
                                {
                                    @Html.Raw("<span class='ack_links'>" + f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>");
                                }
                                else if (f.LogLevel == EVENT_STATUS.CLEARED)
                                {
                                    @Html.Raw("<span class='warning_links'>" + f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID + "</span>");
                                }
                                else
                                {
                                    @Html.Raw(f.Event + "  (" + f.EventID + ")  " + f.UniqueParticipantID);
                                }
                                <br />
                            }
                        }
                    </td>
                    <td>
                        @item.Requests
                    </td>
                    @if (@item.Errors > 0)
                    {
                        <td class="errors">@String.Format("ERROR {0:#,###0} ({1:#,###0})", @item.Errors, @item.Acknowledged + @item.ClearedErrors) 
                            <p class="error_description">
                                @item.ErrorDescr<br />
                                <b>Stack Trace: </b>
                                <br />@item.StackTrace
                            </p>
                        </td>
                    }
                    else if (@item.Acknowledged > 0)
                    {
                        <td class="acknowledged">
                            @String.Format("ACKNOWLEDGED {0:#,###0} ({1:#,###0})", @item.Errors, @item.Acknowledged + @item.ClearedErrors)
                            <p class="error_description">
                                @item.ErrorDescr<br />
                                <b>Stack Trace: </b>
                                <br />@item.StackTrace
                            </p>
                        </td>
                    }
                    else if (@item.Acknowledged == 0 && @item.TotalErrors == 0 && @item.ClearedErrors > 0)
                    {
                        <td class="warnings">
                            @String.Format("CLEARED {0:#,###0} ({1:#,###0})", @item.Errors, @item.ClearedErrors)
                            <p class="error_description">
                                @item.ErrorDescr<br />
                                <b>Stack Trace: </b>
                                <br />@item.StackTrace
                            </p>
                        </td>
                    }
                    else
                    {
                        <td class="non-error">Completed
                        </td>
                    }
                </tr>
            }
        }
    </table>

</div>



